#!/usr/bin/env python
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è API –∫–ª—é—á–∞ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è Railway.
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏ —É–¥–∞–ª—è–µ—Ç –∫–∞–≤—ã—á–∫–∏ –∏–∑ API –∫–ª—é—á–∞, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å –¥–æ–±–∞–≤–ª–µ–Ω—ã Railway.
"""

import os
import sys
import re
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def is_railway():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∑–∞–ø—É—â–µ–Ω –ª–∏ —Å–∫—Ä–∏–ø—Ç –≤ Railway"""
    return os.getenv('RAILWAY_ENVIRONMENT') is not None

def fix_railway_api_key():
    """
    –ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç API –∫–ª—é—á –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è Railway, —É–¥–∞–ª—è—è –∫–∞–≤—ã—á–∫–∏ –∏ –¥—Ä—É–≥–∏–µ –ø—Ä–æ–±–ª–µ–º—ã.
    """
    print("\n========== –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï API –ö–õ–Æ–ß–ê –í RAILWAY ==========")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤ –∫–∞–∫–æ–º –æ–∫—Ä—É–∂–µ–Ω–∏–∏ –∑–∞–ø—É—â–µ–Ω —Å–∫—Ä–∏–ø—Ç
    is_cloud = is_railway()
    print(f"‚úì –û–∫—Ä—É–∂–µ–Ω–∏–µ: {'Railway' if is_cloud else '–õ–æ–∫–∞–ª—å–Ω–æ–µ'}")
    
    if not is_cloud:
        print("\n‚ö†Ô∏è –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤ Railway.")
        print("‚ö†Ô∏è –í –ª–æ–∫–∞–ª—å–Ω–æ–º –æ–∫—Ä—É–∂–µ–Ω–∏–∏ –Ω–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –∏—Å–ø—Ä–∞–≤–ª—è—Ç—å –∫–ª—é—á.")
        return False
    
    # –ü–æ–ª—É—á–∞–µ–º API –∫–ª—é—á
    original_key = os.getenv("ANTHROPIC_API_KEY", "")
    
    if not original_key:
        print("‚ùå API –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!")
        return False
    
    # –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–ª—é—á–µ (—Å–∫—Ä—ã–≤–∞–µ–º –±–æ–ª—å—à—É—é —á–∞—Å—Ç—å)
    key_length = len(original_key)
    print(f"\nüìù –¢–µ–∫—É—â–∏–π API –∫–ª—é—á (–¥–ª–∏–Ω–∞: {key_length})")
    if key_length > 10:
        print(f"üìù –ù–∞—á–∞–ª–æ –∫–ª—é—á–∞: {original_key[:15]}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –∫–∞–≤—ã—á–µ–∫
    new_key = original_key
    key_fixed = False
    
    if new_key.startswith('"') and new_key.endswith('"'):
        new_key = new_key.strip('"')
        print("‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –¥–≤–æ–π–Ω—ã–µ –∫–∞–≤—ã—á–∫–∏ –≤ –Ω–∞—á–∞–ª–µ –∏ –∫–æ–Ω—Ü–µ –∫–ª—é—á–∞")
        key_fixed = True
    elif new_key.startswith("'") and new_key.endswith("'"):
        new_key = new_key.strip("'")
        print("‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –æ–¥–∏–Ω–∞—Ä–Ω—ã–µ –∫–∞–≤—ã—á–∫–∏ –≤ –Ω–∞—á–∞–ª–µ –∏ –∫–æ–Ω—Ü–µ –∫–ª—é—á–∞")
        key_fixed = True
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–±–µ–ª—ã
    if new_key != new_key.strip():
        new_key = new_key.strip()
        print("‚ö†Ô∏è –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã –≤ –∫–ª—é—á–µ")
        key_fixed = True
    
    # –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º–∞—Ç–∞ –∫–ª—é—á–∞
    print("\n‚úì –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ API –∫–ª—é—á–∞:")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è –Ω–æ–≤—ã—Ö –∫–ª—é—á–µ–π Claude 3 (sk-ant-api...)
    new_key_pattern = r'^sk-ant-api\w{2}-[A-Za-z0-9-_]{70,100}$'
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è —Å—Ç–∞—Ä—ã—Ö –∫–ª—é—á–µ–π Claude 2 (sk-...)
    old_key_pattern = r'^sk-[A-Za-z0-9]{40,60}$'
    
    is_new_format = bool(re.match(new_key_pattern, new_key))
    is_old_format = bool(re.match(old_key_pattern, new_key))
    
    if is_new_format or is_old_format:
        print("‚úÖ API –∫–ª—é—á –∏–º–µ–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å–∏–Ω—Ç–∞–∫—Å–∏—Å")
    else:
        print("‚ö†Ô∏è API –∫–ª—é—á –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –æ–∂–∏–¥–∞–µ–º–æ–º—É —Ñ–æ—Ä–º–∞—Ç—É!")
    
    # –ï—Å–ª–∏ –∫–ª—é—á –Ω–µ —Ç—Ä–µ–±—É–µ—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    if not key_fixed:
        print("\n‚úÖ API –∫–ª—é—á –Ω–µ –∏–º–µ–µ—Ç –ª–∏—à–Ω–∏—Ö –∫–∞–≤—ã—á–µ–∫, –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è")
    else:
        # –û–±–Ω–æ–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è –≤ —Ç–µ–∫—É—â–µ–º –ø—Ä–æ—Ü–µ—Å—Å–µ
        os.environ["ANTHROPIC_API_KEY"] = new_key
        
        print(f"\n‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π API –∫–ª—é—á (–¥–ª–∏–Ω–∞: {len(new_key)})")
        print(f"‚úÖ –ö–∞–≤—ã—á–∫–∏ –∏–∑ API –∫–ª—é—á–∞ —É–¥–∞–ª–µ–Ω—ã –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –∑–∞–ø—É—Å–∫–∞")
    
    print("\n‚úÖ –û–ø–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    print("\n======= –†–ï–ó–£–õ–¨–¢–ê–¢ –†–ê–ë–û–¢–´ –°–ö–†–ò–ü–¢–ê =======")
    if key_fixed:
        print("‚úÖ –ö–∞–≤—ã—á–∫–∏ –∏–∑ API –∫–ª—é—á–∞ —É–¥–∞–ª–µ–Ω—ã –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –∑–∞–ø—É—Å–∫–∞")
        print("‚úÖ –ö–ª—é—á –∏—Å–ø—Ä–∞–≤–ª–µ–Ω –≤ –ø–∞–º—è—Ç–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞")
        print("ü§ñ –ë–æ—Ç –¥–æ–ª–∂–µ–Ω –Ω–æ—Ä–º–∞–ª—å–Ω–æ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å –≤ —ç—Ç–æ–º –∑–∞–ø—É—Å–∫–µ")
    else:
        print("‚úÖ API –∫–ª—é—á –∏–º–µ–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç")
        print("‚úÖ –ù–∏–∫–∞–∫–∏—Ö –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è")
        print("ü§ñ –ë–æ—Ç –¥–æ–ª–∂–µ–Ω –Ω–æ—Ä–º–∞–ª—å–Ω–æ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å")
    print("=========================================\n")
    
    return True

if __name__ == "__main__":
    fix_railway_api_key() 