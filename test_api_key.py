#!/usr/bin/env python
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API –∫–ª—é—á–∞ Anthropic
"""

import os
import sys
import asyncio
from dotenv import load_dotenv
import pkg_resources

async def test_api_key():
    """
    –¢–µ—Å—Ç–∏—Ä—É–µ—Ç API –∫–ª—é—á Anthropic
    """
    print("\n========== –¢–ï–°–¢ API –ö–õ–Æ–ß–ê ANTHROPIC ==========")
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    load_dotenv()
    
    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–π –º–æ–¥—É–ª—å
    try:
        from anthropic_helper import get_api_key_with_prefix, create_anthropic_client, is_valid_anthropic_key
        print("‚úÖ –ú–æ–¥—É–ª—å anthropic_helper —É—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª—è anthropic_helper: {e}")
        sys.exit(1)
    
    # –ü–æ–ª—É—á–∞–µ–º –≤–µ—Ä—Å–∏—é –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ anthropic
    try:
        anthropic_version = pkg_resources.get_distribution("anthropic").version
        print(f"üìù –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ anthropic –≤–µ—Ä—Å–∏–∏ {anthropic_version}")
        
        if anthropic_version.startswith("0.5") and int(anthropic_version.split(".")[1]) >= 10:
            print("üîµ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –Ω–æ–≤–∞—è –≤–µ—Ä—Å–∏—è API (0.5.10+)")
            api_type = "–Ω–æ–≤—ã–π"
        elif anthropic_version.startswith("0.") and int(anthropic_version.split(".")[1]) >= 6:
            print("üîµ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –Ω–æ–≤–∞—è –≤–µ—Ä—Å–∏—è API (0.6+)")
            api_type = "–Ω–æ–≤—ã–π"
        else:
            print("üü† –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å—Ç–∞—Ä–∞—è –≤–µ—Ä—Å–∏—è API (–¥–æ 0.5.10)")
            api_type = "—Å—Ç–∞—Ä—ã–π"
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –≤–µ—Ä—Å–∏–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏: {e}")
        api_type = "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π"
    
    # –ü–æ–ª—É—á–∞–µ–º API –∫–ª—é—á
    try:
        api_key = get_api_key_with_prefix()
        
        if not api_key:
            print("‚ùå API –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!")
            # –ü—Ä–æ–±—É–µ–º –ø–æ–∏—Å–∫–∞—Ç—å –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
            direct_key = os.getenv("ANTHROPIC_API_KEY")
            if direct_key:
                print(f"üìù –ù–∞–π–¥–µ–Ω –∏—Å—Ö–æ–¥–Ω—ã–π –∫–ª—é—á –≤ ANTHROPIC_API_KEY (–¥–ª–∏–Ω–∞: {len(direct_key)})")
                print(f"üìù –ù–∞—á–∞–ª–æ –∫–ª—é—á–∞: {direct_key[:7]}...")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç –∫–ª—é—á–∞ –Ω–∞–ø—Ä—è–º—É—é
                is_valid = is_valid_anthropic_key(direct_key)
                print(f"üîç –ü—Ä—è–º–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ –∫–ª—é—á–∞: {'‚úÖ –í–∞–ª–∏–¥–Ω—ã–π' if is_valid else '‚ùå –ù–µ–≤–∞–ª–∏–¥–Ω—ã–π'}")
            else:
                print("‚ùå –ö–ª—é—á ANTHROPIC_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!")
            return False
        
        print(f"üìù API –∫–ª—é—á —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω (–¥–ª–∏–Ω–∞: {len(api_key)})")
        print(f"üìù –ù–∞—á–∞–ª–æ –∫–ª—é—á–∞: {api_key[:12]}...")
        print(f"üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ –∫–ª—é—á–∞: {'‚úÖ –í–∞–ª–∏–¥–Ω—ã–π' if is_valid_anthropic_key(api_key) else '‚ùå –ù–µ–≤–∞–ª–∏–¥–Ω—ã–π'}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ç–∏–ø–∞ –∫–ª—é—á–∞ API –≤–µ—Ä—Å–∏–∏
        if api_type == "–Ω–æ–≤—ã–π" and not api_key.startswith("sk-ant-api"):
            print(f"‚ö†Ô∏è –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï: –î–ª—è {anthropic_version} –¥–æ–ª–∂–µ–Ω –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∫–ª—é—á —Ñ–æ—Ä–º–∞—Ç–∞ sk-ant-api03-...")
        elif api_type == "—Å—Ç–∞—Ä—ã–π" and not api_key.startswith("sk-"):
            print(f"‚ö†Ô∏è –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï: –î–ª—è {anthropic_version} –¥–æ–ª–∂–µ–Ω –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∫–ª—é—á —Ñ–æ—Ä–º–∞—Ç–∞ sk-...")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ API –∫–ª—é—á–∞: {e}")
        return False
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç
    print("\nüì° –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞ Anthropic...")
    try:
        client, method, error = await create_anthropic_client()
        
        if error:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞: {error}")
            return False
        else:
            print(f"‚úÖ –ö–ª–∏–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –º–µ—Ç–æ–¥: {method}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–ª–∏–µ–Ω—Ç–∞: {e}")
        return False
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
    print("\nüì° –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è...")
    try:
        if method == "completion":
            # –°—Ç–∞—Ä–æ–µ API
            response = client.completion(
                prompt="\n\nHuman: –ü—Ä–∏–≤–µ—Ç, —ç—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å. –û—Ç–≤–µ—Ç—å –æ–¥–Ω–∏–º —Å–ª–æ–≤–æ–º.\n\nAssistant:",
                model="claude-instant-1.2",
                max_tokens_to_sample=20,
                temperature=0
            )
            result = response.completion
        else:
            # –ù–æ–≤–æ–µ API
            messages = [
                {
                    "role": "user", 
                    "content": "–ü—Ä–∏–≤–µ—Ç, —ç—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å. –û—Ç–≤–µ—Ç—å –æ–¥–Ω–∏–º —Å–ª–æ–≤–æ–º."
                }
            ]
            response = client.messages.create(
                model="claude-3-haiku-20240307",
                max_tokens=20,
                temperature=0,
                messages=messages
            )
            result = response.content[0].text
        
        print(f"‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ! –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç: '{result}'")
        print("‚úÖ API –∫–ª—é—á –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–µ–Ω!")
        return True
    except Exception as e:
        error_str = str(e)
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞: {e}")
        
        if "authentication_error" in error_str or "invalid x-api-key" in error_str:
            print("\n‚ö†Ô∏è –û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏! –ü—Ä–æ–±–ª–µ–º–∞ —Å API –∫–ª—é—á–æ–º:")
            print("1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –∫–ª—é—á –Ω–µ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω")
            print("2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø –∫ API")
            print("3. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —É—Ç–∏–ª–∏—Ç—É –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–ª—é—á–∞ (update_api_key.py)")
        elif "credit balance is too low" in error_str:
            print("\n‚ö†Ô∏è –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ API!")
        
        return False

if __name__ == "__main__":
    result = asyncio.run(test_api_key())
    print("\n================================================")
    
    if result:
        print("‚úÖ –¢–µ—Å—Ç API –∫–ª—é—á–∞ –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ! –ö–ª—é—á —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.")
        sys.exit(0)
    else:
        print("‚ùå –¢–µ—Å—Ç API –∫–ª—é—á–∞ –∑–∞–≤–µ—Ä—à–µ–Ω —Å –æ—à–∏–±–∫–∞–º–∏!")
        print("üîß –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∑–∞–ø—É—Å—Ç–∏—Ç—å update_api_key.py –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–ª—é—á–∞.")
        sys.exit(1) 