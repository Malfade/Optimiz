#!/usr/bin/env python
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ API –∫–ª—é—á–∞ Anthropic.
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å API –∫–ª—é—á–∞ –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API.
"""

import os
import sys
import asyncio
import logging
from dotenv import load_dotenv
import pkg_resources

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏–∑ –Ω–∞—à–µ–≥–æ –º–æ–¥—É–ª—è
from anthropic_helper import get_api_key_with_prefix, is_valid_anthropic_key, create_anthropic_client

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', 
    level=logging.INFO
)
logger = logging.getLogger("test_api_key")

async def test_api_key():
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç API –∫–ª—é—á Anthropic, –µ–≥–æ —Ñ–æ—Ä–º–∞—Ç –∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API.
    """
    print("\n========== –¢–ï–°–¢ API –ö–õ–Æ–ß–ê ANTHROPIC ==========")
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    load_dotenv()
    
    try:
        print("‚úÖ –ú–æ–¥—É–ª—å anthropic_helper —É—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
        
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º anthropic –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–µ—Ä—Å–∏–∏
        import anthropic
        print(f"üìù –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ anthropic –≤–µ—Ä—Å–∏–∏ {anthropic.__version__}")
        if int(anthropic.__version__.split('.')[0]) >= 1 or int(anthropic.__version__.split('.')[1]) >= 5:
            print(f"üîµ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –Ω–æ–≤–∞—è –≤–µ—Ä—Å–∏—è API ({anthropic.__version__}+)")
        else:
            print(f"üü† –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å—Ç–∞—Ä–∞—è –≤–µ—Ä—Å–∏—è API ({anthropic.__version__})")
        
        # –ü–æ–ª—É—á–∞–µ–º API –∫–ª—é—á
        api_key = get_api_key_with_prefix()
        
        if not api_key:
            print("‚ùå API –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!")
            print("üîß –î–æ–±–∞–≤—å—Ç–µ ANTHROPIC_API_KEY –≤ .env —Ñ–∞–π–ª –∏–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è")
            return False
        
        # –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–ª—é—á–µ (—á–∞—Å—Ç–∏—á–Ω–æ —Å–∫—Ä—ã—Ç—É—é)
        hidden_key = f"{api_key[:10]}..."
        print(f"üìù API –∫–ª—é—á —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω (–¥–ª–∏–Ω–∞: {len(api_key)})")
        print(f"üìù –ù–∞—á–∞–ª–æ –∫–ª—é—á–∞: {hidden_key}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç –∫–ª—é—á–∞
        is_valid = is_valid_anthropic_key(api_key)
        print(f"üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ –∫–ª—é—á–∞: {'‚úÖ –í–∞–ª–∏–¥–Ω—ã–π' if is_valid else '‚ùå –ù–µ–≤–∞–ª–∏–¥–Ω—ã–π'}")
        
        if not is_valid:
            print("\n‚ö†Ô∏è API –∫–ª—é—á –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –æ–∂–∏–¥–∞–µ–º–æ–º—É —Ñ–æ—Ä–º–∞—Ç—É!")
            print("üîé –§–æ—Ä–º–∞—Ç –Ω–æ–≤–æ–≥–æ –∫–ª—é—á–∞: 'sk-ant-api03-...'")
            print("üîé –§–æ—Ä–º–∞—Ç —Å—Ç–∞—Ä–æ–≥–æ –∫–ª—é—á–∞: 'sk-...'")
            print("‚ö†Ô∏è –í–æ–∑–º–æ–∂–Ω–æ, API –∫–ª—é—á —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏—à–Ω–∏–µ —Å–∏–º–≤–æ–ª—ã –∏–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω")
            print("üîß –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –∫–ª—é—á –Ω–∞ —Å–∞–π—Ç–µ Anthropic –∏ –æ–±–Ω–æ–≤–∏—Ç—å –µ–≥–æ")
        
        print("\nüì° –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞ Anthropic...")
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç API
        client, method_name, error_message = await create_anthropic_client()
        
        if error_message:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–ª–∏–µ–Ω—Ç–∞: {error_message}")
            return False
        
        print(f"‚úÖ –ö–ª–∏–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –º–µ—Ç–æ–¥: {method_name}")
        
        # –ü—Ä–æ–≤–æ–¥–∏–º —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
        print("\nüì° –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è...")
        
        try:
            if method_name == "completion":
                # –°—Ç–∞—Ä—ã–π –º–µ—Ç–æ–¥ API
                response = client.completion(
                    prompt="\n\nHuman: –ü—Ä–∏–≤–µ—Ç, —ç—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å!\n\nAssistant:",
                    model="claude-1",
                    max_tokens_to_sample=10,
                    temperature=0
                )
                response_text = response.completion
            else:
                # –ù–æ–≤—ã–π –º–µ—Ç–æ–¥ API (messages)
                response = client.messages.create(
                    model="claude-3-haiku-20240307",
                    max_tokens=10,
                    messages=[
                        {"role": "user", "content": "–ü—Ä–∏–≤–µ—Ç, —ç—Ç–æ —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å!"}
                    ]
                )
                response_text = response.content[0].text
            
            print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å API! –û—Ç–≤–µ—Ç: {response_text}")
            print("\nüéâ API –∫–ª—é—á —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ! –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ.")
            return True
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞: {e}")
            
            # –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –¥–ª—è –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ–≥–æ –≤—ã–≤–æ–¥–∞
            error_str = str(e)
            if "401" in error_str:
                print("\n‚ö†Ô∏è –û—à–∏–±–∫–∞ 401 - –ù–µ–≤–µ—Ä–Ω—ã–π –∫–ª—é—á API (Authentication Error)")
                print("üîç –ü—Ä–∏—á–∏–Ω—ã –æ—à–∏–±–∫–∏ –º–æ–≥—É—Ç –±—ã—Ç—å —Å–ª–µ–¥—É—é—â–∏–º–∏:")
                print("1. –ö–ª—é—á API –Ω–µ–≤–µ—Ä–Ω—ã–π –∏–ª–∏ —É—Å—Ç–∞—Ä–µ–ª")
                print("2. –ö–ª—é—á —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω —Å –æ—à–∏–±–∫–∞–º–∏ (–ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã, —Å–∏–º–≤–æ–ª—ã)")
                print("3. –ö–ª—é—á –æ—Ç –¥—Ä—É–≥–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞ (–Ω–µ –æ—Ç Anthropic)")
                print("\nüîß –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
                print("- –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π –∫–ª—é—á API –Ω–∞ —Å–∞–π—Ç–µ https://console.anthropic.com/")
                print("- –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∫–æ–ø–∏—Ä—É–µ—Ç–µ –∫–ª—é—á –±–µ–∑ –ª–∏—à–Ω–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤")
                print("- –û–±–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é ANTHROPIC_API_KEY –≤ Railway")
            elif "403" in error_str:
                print("\n‚ö†Ô∏è –û—à–∏–±–∫–∞ 403 - –û—Ç–∫–∞–∑ –≤ –¥–æ—Å—Ç—É–ø–µ (Forbidden)")
                print("üîç –í–æ–∑–º–æ–∂–Ω–æ —É –≤–∞—à–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ –∑–∞–∫–æ–Ω—á–∏–ª—Å—è –∫—Ä–µ–¥–∏—Ç –∏–ª–∏ –¥–æ—Å—Ç—É–ø –æ–≥—Ä–∞–Ω–∏—á–µ–Ω")
            elif "429" in error_str:
                print("\n‚ö†Ô∏è –û—à–∏–±–∫–∞ 429 - –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤ (Rate Limit)")
                print("üîç –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ")
            elif "timeout" in error_str.lower():
                print("\n‚ö†Ô∏è –û—à–∏–±–∫–∞ —Ç–∞–π–º-–∞—É—Ç–∞ - –°–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç")
                print("üîç –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É –∏–ª–∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ")
            
            return False
    except Exception as e:
        print(f"‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ API –∫–ª—é—á–∞: {e}")
        return False

if __name__ == "__main__":
    result = asyncio.run(test_api_key())
    if not result:
        print("\n‚ùå –¢–µ—Å—Ç API –∫–ª—é—á–∞ –∑–∞–≤–µ—Ä—à–µ–Ω —Å –æ—à–∏–±–∫–∞–º–∏!")
        print("üîß –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∑–∞–ø—É—Å—Ç–∏—Ç—å update_api_key.py –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–ª—é—á–∞.")
    sys.exit(0 if result else 1) 