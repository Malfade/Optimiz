#!/usr/bin/env python
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä—è–º–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ API –∫–ª—é—á–∞ Anthropic —Å –ø–æ–¥—Ä–æ–±–Ω–æ–π –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–æ–π.
–í—ã–≤–æ–¥–∏—Ç –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–ª—é—á–µ –∏ –ø—ã—Ç–∞–µ—Ç—Å—è –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å.
"""

import os
import sys
import re
import json
import requests
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

def is_railway():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∑–∞–ø—É—â–µ–Ω –ª–∏ —Å–∫—Ä–∏–ø—Ç –≤ Railway"""
    return os.getenv('RAILWAY_ENVIRONMENT') is not None

def check_anthropic_key_directly():
    """–ü—Ä—è–º–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ API –∫–ª—é—á–∞ Anthropic —á–µ—Ä–µ–∑ HTTP –∑–∞–ø—Ä–æ—Å"""
    print("\n========== –ü–†–Ø–ú–ê–Ø –ü–†–û–í–ï–†–ö–ê API –ö–õ–Æ–ß–ê ANTHROPIC ==========")
    
    # –ü–æ–ª—É—á–∞–µ–º API –∫–ª—é—á
    api_key = os.getenv("ANTHROPIC_API_KEY", "")
    
    if not api_key:
        print("‚ùå API –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!")
        return False
    
    # –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–ª—é—á–µ
    print(f"üìù API –∫–ª—é—á (–¥–ª–∏–Ω–∞: {len(api_key)})")
    print(f"üìù –ü—Ä–µ—Ñ–∏–∫—Å –∫–ª—é—á–∞: {api_key[:15]}...")
    print(f"üìù –°—É—Ñ—Ñ–∏–∫—Å –∫–ª—é—á–∞: ...{api_key[-4:]}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ –∫–ª—é—á–∞
    if api_key.startswith("sk-ant-api"):
        print("‚úì –§–æ—Ä–º–∞—Ç –∫–ª—é—á–∞: –ù–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç (sk-ant-api...)")
        new_format = True
    elif api_key.startswith("sk-"):
        print("‚úì –§–æ—Ä–º–∞—Ç –∫–ª—é—á–∞: –°—Ç–∞—Ä—ã–π —Ñ–æ—Ä–º–∞—Ç (sk-...)")
        new_format = False
    else:
        print("‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–ª—é—á–∞! –ö–ª—é—á –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å 'sk-' –∏–ª–∏ 'sk-ant-api'")
        return False
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
    print("\nüì° –í—ã–ø–æ–ª–Ω—è—é —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –∫ API Anthropic...")
    
    # –î–ª—è –Ω–æ–≤–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞ –∫–ª—é—á–∞ (Claude 3)
    if new_format:
        url = "https://api.anthropic.com/v1/messages"
        headers = {
            "x-api-key": api_key,
            "anthropic-version": "2023-06-01",
            "content-type": "application/json"
        }
        data = {
            "model": "claude-3-haiku-20240307",
            "max_tokens": 30,
            "messages": [
                {"role": "user", "content": "–ù–∞–ø–∏—à–∏ 'API –∫–ª—é—á —Ä–∞–±–æ—Ç–∞–µ—Ç' –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ"}
            ]
        }
    # –î–ª—è —Å—Ç–∞—Ä–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞ –∫–ª—é—á–∞ (Claude 2)
    else:
        url = "https://api.anthropic.com/v1/complete"
        headers = {
            "x-api-key": api_key,
            "anthropic-version": "2023-06-01",
            "content-type": "application/json"
        }
        data = {
            "model": "claude-2.0",
            "max_tokens_to_sample": 30,
            "prompt": "\n\nHuman: –ù–∞–ø–∏—à–∏ 'API –∫–ª—é—á —Ä–∞–±–æ—Ç–∞–µ—Ç' –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ\n\nAssistant: "
        }
    
    try:
        response = requests.post(url, headers=headers, json=data, timeout=30)
        
        # –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–ø—Ä–æ—Å–µ
        print(f"üì§ URL: {url}")
        print(f"üì§ –ú–µ—Ç–æ–¥ API: {'messages (–Ω–æ–≤—ã–π)' if new_format else 'complete (—Å—Ç–∞—Ä—ã–π)'}")
        print(f"üì§ –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        
        # –ï—Å–ª–∏ –∑–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–µ–Ω
        if response.status_code == 200:
            print("‚úÖ API –∫–ª—é—á —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
            print("\nüì• –û—Ç–≤–µ—Ç API:")
            try:
                resp_data = response.json()
                print(json.dumps(resp_data, indent=2, ensure_ascii=False))
            except:
                print(response.text[:200])
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ API: {response.status_code}")
            print("\nüì• –û—Ç–≤–µ—Ç API:")
            try:
                resp_data = response.json()
                print(json.dumps(resp_data, indent=2, ensure_ascii=False))
            except:
                print(response.text[:200])
            
            # –ê–Ω–∞–ª–∏–∑ —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫
            if response.status_code == 401:
                print("\n‚ö†Ô∏è –û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ (401):")
                print("- API –∫–ª—é—á –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –∏–ª–∏ –æ—Ç–æ–∑–≤–∞–Ω")
                print("- –í–æ–∑–º–æ–∂–Ω–æ, –∫–ª—é—á –∏–º–µ–µ—Ç –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç")
                print("- –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø–æ–ª—É—á–∏—Ç—å –Ω–æ–≤—ã–π –∫–ª—é—á –≤ –∫–æ–Ω—Å–æ–ª–∏ Anthropic")
            
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞: {e}")
        return False

if __name__ == "__main__":
    print(f"üåê –û–∫—Ä—É–∂–µ–Ω–∏–µ: {'Railway' if is_railway() else '–õ–æ–∫–∞–ª—å–Ω–æ–µ'}")
    check_anthropic_key_directly() 