#!/usr/bin/env python
"""
–û—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ Windows
–ü–æ—Ä—è–¥–æ–∫ –∏–º–ø–æ—Ä—Ç–æ–≤ –≤–∞–∂–µ–Ω –¥–ª—è —Ä–∞–±–æ—Ç—ã –≤ Railway!
"""
import os
import sys
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
if len(sys.argv) > 1 and sys.argv[1] == '--check-env':
    logger.info("–ó–∞–ø—Ä–æ—à–µ–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è Railway")
    try:
        from check_railway_command import check_railway_env
        check_railway_env()
        sys.exit(0)
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è: {e}")
        sys.exit(1)

# –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û: –û—á–∏—â–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –ø—Ä–æ–∫—Å–∏
# Railway –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–ª—è–µ—Ç —ç—Ç–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ, —á—Ç–æ –≤—ã–∑—ã–≤–∞–µ—Ç –æ—à–∏–±–∫–∏
proxy_env_vars = ['HTTP_PROXY', 'HTTPS_PROXY', 'http_proxy', 'https_proxy']
saved_proxies = {}

for env_var in proxy_env_vars:
    if env_var in os.environ:
        saved_proxies[env_var] = os.environ[env_var]
        logger.info(f"–£–¥–∞–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è {env_var}: {os.environ[env_var]}")
        del os.environ[env_var]

logger.info(f"–£–¥–∞–ª–µ–Ω—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–æ–∫—Å–∏: {saved_proxies}")

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª—å –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏
try:
    from subscription_check import check_user_subscription, add_user_subscription
    logger.info("‚úÖ –ú–æ–¥—É–ª—å –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω")
except Exception as e:
    logger.critical(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –º–æ–¥—É–ª—è –ø–æ–¥–ø–∏—Å–∫–∏: {e}")
    sys.exit(1)

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å–∫—É –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º (–∏—Å–ø–æ–ª—å–∑—É–µ–º ID –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)
BOT_OWNER_ID = os.getenv("BOT_OWNER_ID", "")
SUBSCRIPTION_CHECK_ENABLED = os.getenv("SUBSCRIPTION_CHECK_ENABLED", "true").lower() == "true"

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏
def check_subscription():
    # –ï—Å–ª–∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –æ—Ç–∫–ª—é—á–µ–Ω–∞ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É
    if not SUBSCRIPTION_CHECK_ENABLED:
        logger.info("–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –æ—Ç–∫–ª—é—á–µ–Ω–∞ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –∑–∞–ø—É—Å–∫")
        return True
        
    # –ï—Å–ª–∏ —ç—Ç–æ Railway –∏–ª–∏ –¥—Ä—É–≥–æ–µ –æ–±–ª–∞—á–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É
    if os.getenv('RAILWAY_ENVIRONMENT') is not None:
        logger.info("–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ —Å—Ä–µ–¥–∞ Railway, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –ø–æ–¥–ø–∏—Å–∫–∏")
        return True
    
    # –í —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ —Å–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–æ–¥–ø–∏—Å–∫—É, –µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω –≤–ª–∞–¥–µ–ª–µ—Ü –±–æ—Ç–∞
    if BOT_OWNER_ID:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å–∫—É –≤–ª–∞–¥–µ–ª—å—Ü–∞
        if check_user_subscription(BOT_OWNER_ID):
            logger.info(f"‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞ –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–∞ –±–æ—Ç–∞ (ID: {BOT_OWNER_ID})")
            return True
        else:
            # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–æ–¥–ø–∏—Å–∫—É –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
            add_user_subscription(BOT_OWNER_ID, "–¢–µ—Å—Ç–æ–≤—ã–π –ø–ª–∞–Ω", 1, "dev_subscription")
            logger.warning(f"‚ö†Ô∏è –°–æ–∑–¥–∞–Ω–∞ –≤—Ä–µ–º–µ–Ω–Ω–∞—è —Ç–µ—Å—Ç–æ–≤–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–∞ (ID: {BOT_OWNER_ID})")
            return True
    
    # –î–ª—è –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–ª—É—á–∞–µ–≤ —Ç—Ä–µ–±—É–µ–º –Ω–∞–ª–∏—á–∏–µ –∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏
    logger.critical("‚ùå –ê–∫—Ç–∏–≤–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ë–æ—Ç –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –∑–∞–ø—É—â–µ–Ω.")
    return False

# –°–Ω–∞—á–∞–ª–∞ –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º fix_imports, –∫–æ—Ç–æ—Ä—ã–π –∏—Å–ø—Ä–∞–≤–∏—Ç –∏–º–ø–æ—Ä—Ç—ã anthropic
try:
    import fix_imports
    logger.info("‚úÖ –ú–æ–¥—É–ª—å fix_imports —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω –∏ –ø—Ä–∏–º–µ–Ω–µ–Ω")
except Exception as e:
    logger.critical(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ fix_imports: {e}")
    sys.exit(1)

# –¢–µ–ø–µ—Ä—å anthropic –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –¥–æ—Å—Ç—É–ø–µ–Ω –∫–∞–∫ fallback_anthropic
try:
    import anthropic
    logger.info(f"‚úÖ –ú–æ–¥—É–ª—å anthropic —É—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω —á–µ—Ä–µ–∑ fix_imports: {anthropic.__name__}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞
    test_client = anthropic.Anthropic(api_key=os.getenv("ANTHROPIC_API_KEY"))
    logger.info(f"‚úÖ –ö–ª–∏–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω: {test_client.__class__.__name__}")
    
    # –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    try:
        if os.getenv("ANTHROPIC_API_KEY"):
            test_message = test_client.messages.create(
                model="claude-3-haiku-20240307",
                max_tokens=10,
                messages=[{"role": "user", "content": "Test connection"}]
            )
            logger.info(f"‚úÖ‚úÖ –¢–ï–°–¢–û–í–´–ô –ó–ê–ü–†–û–° –£–°–ü–ï–®–ù–û –û–¢–ü–†–ê–í–õ–ï–ù: {test_message.content[0].text[:20] if test_message.content else '–ù–µ—Ç –æ—Ç–≤–µ—Ç–∞'}")
    except Exception as test_err:
        logger.warning(f"‚ö†Ô∏è –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω (–Ω–µ–∫—Ä–∏—Ç–∏—á–Ω–æ): {test_err}")
    
except Exception as e:
    logger.critical(f"‚ùå‚ùå‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –ü–†–ò –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–ò ANTHROPIC: {e}")
    sys.exit(1)

# –¢–µ–ø–µ—Ä—å –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª –±–æ—Ç–∞
try:
    logger.info("üîÑ –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª optimization_bot...")
    from optimization_bot import main
    logger.info("‚úÖ –£—Å–ø–µ—à–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª optimization_bot")
except Exception as e:
    logger.critical(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –±–æ—Ç–∞: {e}")
    sys.exit(1)

if __name__ == "__main__":
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ Windows...")
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å–∫—É –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º
        if check_subscription():
            main()
        else:
            # –ï—Å–ª–∏ –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–µ –∞–∫—Ç–∏–≤–Ω–∞, –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –∑–∞–≤–µ—Ä—à–∞–µ–º —Ä–∞–±–æ—Ç—É
            print("‚ùå –î–ª—è —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞ —Ç—Ä–µ–±—É–µ—Ç—Å—è –∞–∫—Ç–∏–≤–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞.")
            print("üì± –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–∫—Ä–æ–π—Ç–µ Telegram –∏ –æ–ø–ª–∞—Ç–∏—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É —á–µ—Ä–µ–∑ –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.")
            sys.exit(1)
    except Exception as e:
        logger.critical(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {e}")
        sys.exit(1)