#!/usr/bin/env python
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è API –∫–ª—é—á–∞ Anthropic.
–ü–æ–∑–≤–æ–ª—è–µ—Ç –æ–±–Ω–æ–≤–∏—Ç—å –∫–ª—é—á API –≤ .env —Ñ–∞–π–ª–µ –∏ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è.
"""

import os
import sys
import re
import logging
from dotenv import load_dotenv, set_key, find_dotenv

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', 
    level=logging.INFO
)
logger = logging.getLogger("update_api_key")

def is_railway():
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∑–∞–ø—É—â–µ–Ω –ª–∏ —Å–∫—Ä–∏–ø—Ç –≤ Railway
    """
    return os.getenv('RAILWAY_ENVIRONMENT') is not None

def is_valid_anthropic_key(api_key):
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ñ–æ—Ä–º–∞—Ç API –∫–ª—é—á–∞ Anthropic
    
    –î–æ–ø—É—Å—Ç–∏–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã:
    - sk-ant-api03-... (–Ω–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç)
    - sk-... (—Å—Ç–∞—Ä—ã–π —Ñ–æ—Ä–º–∞—Ç)
    """
    # –ü–∞—Ç—Ç–µ—Ä–Ω—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    new_key_pattern = r'^sk-ant-api\d{2}-[a-zA-Z0-9]{24}\.+[a-zA-Z0-9]{16}$'
    old_key_pattern = r'^sk-[a-zA-Z0-9]{64}$'
    
    return bool(re.match(new_key_pattern, api_key) or re.match(old_key_pattern, api_key))

def show_key_format_instructions():
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –ø–æ–ª—É—á–µ–Ω–∏—é –Ω–æ–≤–æ–≥–æ API –∫–ª—é—á–∞ Anthropic
    """
    print("\nüìù –ö–ê–ö –ü–û–õ–£–ß–ò–¢–¨ –ù–û–í–´–ô API –ö–õ–Æ–ß ANTHROPIC:")
    print("1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ —Å–∞–π—Ç https://console.anthropic.com/")
    print("2. –í–æ–π–¥–∏—Ç–µ –≤ —Å–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç Anthropic (–∏–ª–∏ —Å–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π)")
    print("3. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ —Ä–∞–∑–¥–µ–ª API Keys")
    print("4. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É 'Create key'")
    print("5. –î–∞–π—Ç–µ –∏–º—è –≤–∞—à–µ–º—É –∫–ª—é—á—É (–Ω–∞–ø—Ä–∏–º–µ—Ä, 'OptimizationBot')")
    print("6. –í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è (permissions) - –º–∏–Ω–∏–º—É–º –Ω—É–∂–µ–Ω 'text'")
    print("7. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É 'Create key'")
    print("8. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –≤–µ—Å—å –∫–ª—é—á –ø–æ–ª–Ω–æ—Å—Ç—å—é - –ù–ï –ú–ï–ù–Ø–ô–¢–ï –ï–ì–û –§–û–†–ú–ê–¢!")
    print("9. –ö–ª—é—á –∏–º–µ–µ—Ç —Ñ–æ—Ä–º–∞—Ç: sk-ant-api03-xxxxxxxx.xxxxxxxx (–Ω–æ–≤—ã–π)")
    print("   –∏–ª–∏ —Ñ–æ—Ä–º–∞—Ç: sk-xxxxxxxxxxxx (—Å—Ç–∞—Ä—ã–π)")
    print("\n‚ö†Ô∏è –í–ê–ñ–ù–û: –∫–ª—é—á –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –û–î–ò–ù –†–ê–ó –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏!\n")

def update_api_key():
    """
    –û–±–Ω–æ–≤–ª—è–µ—Ç API –∫–ª—é—á Anthropic –≤ .env —Ñ–∞–π–ª–µ –∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    """
    print("\n========== –û–ë–ù–û–í–õ–ï–ù–ò–ï API –ö–õ–Æ–ß–ê ANTHROPIC ==========")
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∑–∞–ø—É—â–µ–Ω—ã –ª–∏ –º—ã –≤ Railway
    is_in_railway = is_railway()
    print(f"‚úì –û–∫—Ä—É–∂–µ–Ω–∏–µ: {'Railway' if is_in_railway else '–õ–æ–∫–∞–ª—å–Ω–æ–µ'}")
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ–∫—É—â–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    dotenv_file = find_dotenv()
    load_dotenv(dotenv_file)
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π API –∫–ª—é—á (–µ—Å–ª–∏ –µ—Å—Ç—å)
    current_key = os.getenv("ANTHROPIC_API_KEY", "")
    if current_key:
        masked_key = current_key[:10] + "..." + current_key[-5:] if len(current_key) > 20 else current_key[:5] + "..."
        print(f"üìù –¢–µ–∫—É—â–∏–π API –∫–ª—é—á: {masked_key} (–¥–ª–∏–Ω–∞: {len(current_key)})")
    else:
        print("üìù –¢–µ–∫—É—â–∏–π API –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω")
    
    # –í Railway —Ä–∞–±–æ—Ç–∞–µ–º –≤ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–º —Ä–µ–∂–∏–º–µ
    if is_in_railway:
        print("\nüîß –ó–ê–ü–£–°–ö –í –û–ö–†–£–ñ–ï–ù–ò–ò RAILWAY (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ–∂–∏–º)")
        
        if not current_key:
            print("‚ùå API –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è Railway!")
            print("‚ö†Ô∏è –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–æ–±–∞–≤–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é ANTHROPIC_API_KEY –≤ Railway")
            return False
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç –∫–ª—é—á–∞
        is_valid = is_valid_anthropic_key(current_key)
        if not is_valid:
            print("‚ö†Ô∏è –§–æ—Ä–º–∞—Ç API –∫–ª—é—á–∞ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –æ–∂–∏–¥–∞–µ–º–æ–º—É!")
            print("‚ö†Ô∏è –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–ª—é—á –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö Railway")
        else:
            print("‚úÖ –§–æ—Ä–º–∞—Ç API –∫–ª—é—á–∞ –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω")
            
        print("\n‚ö†Ô∏è –í Railway –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–ª—é—á–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ")
        print("‚ö†Ô∏è –î–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è API –∫–ª—é—á–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
        print("1. –ü–æ–ª—É—á–∏—Ç–µ –Ω–æ–≤—ã–π –∫–ª—é—á –Ω–∞ —Å–∞–π—Ç–µ https://console.anthropic.com/")
        print("2. –û–±–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é ANTHROPIC_API_KEY –≤ Railway")
        
        # –í—Å–µ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º True —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –±–æ—Ç–∞
        return True
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø–æ –ø–æ–ª—É—á–µ–Ω–∏—é –∫–ª—é—á–∞ –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞
    show_key_format_instructions()
    
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –Ω–æ–≤—ã–π –∫–ª—é—á
    new_key = input("\nüìù –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π API –∫–ª—é—á Anthropic: ").strip()
    
    if not new_key:
        print("‚ùå –ö–ª—é—á –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º! –û—Ç–º–µ–Ω–∞ –æ–ø–µ—Ä–∞—Ü–∏–∏.")
        return False
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–∞–≤—ã—á–µ–∫
    if new_key.startswith('"') and new_key.endswith('"'):
        new_key = new_key.strip('"')
        print("‚ö†Ô∏è –£–¥–∞–ª–µ–Ω—ã –¥–≤–æ–π–Ω—ã–µ –∫–∞–≤—ã—á–∫–∏ –∏–∑ –∫–ª—é—á–∞")
    elif new_key.startswith("'") and new_key.endswith("'"):
        new_key = new_key.strip("'")
        print("‚ö†Ô∏è –£–¥–∞–ª–µ–Ω—ã –æ–¥–∏–Ω–∞—Ä–Ω—ã–µ –∫–∞–≤—ã—á–∫–∏ –∏–∑ –∫–ª—é—á–∞")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç –∫–ª—é—á–∞
    if not is_valid_anthropic_key(new_key):
        print("‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: —Ñ–æ—Ä–º–∞—Ç –∫–ª—é—á–∞ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –æ–∂–∏–¥–∞–µ–º–æ–º—É!")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–ª—é—á –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –ø—Ä–µ—Ñ–∏–∫—Å–∞
        if not (new_key.startswith("sk-ant-api") or new_key.startswith("sk-")):
            print("‚ùå –ö–ª—é—á –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å 'sk-ant-api' –∏–ª–∏ 'sk-'")
            retry = input("–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –Ω–µ—Å–º–æ—Ç—Ä—è –Ω–∞ –æ—à–∏–±–∫—É —Ñ–æ—Ä–º–∞—Ç–∞? (y/n): ").lower()
            if retry != 'y':
                print("‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.")
                return False
        else:
            print("‚ö†Ô∏è –ö–ª—é—á –∏–º–µ–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø—Ä–µ—Ñ–∏–∫—Å, –Ω–æ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç–æ—á–Ω–æ–º—É —Ñ–æ—Ä–º–∞—Ç—É")
            print("‚ö†Ô∏è –≠—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–æ—Ä–º–∞–ª—å–Ω–æ, –µ—Å–ª–∏ Anthropic –æ–±–Ω–æ–≤–∏–ª —Ñ–æ—Ä–º–∞—Ç –∫–ª—é—á–µ–π")
    else:
        print("‚úÖ –§–æ—Ä–º–∞—Ç –∫–ª—é—á–∞ API –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω")
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –∫–ª—é—á –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞
    os.environ["ANTHROPIC_API_KEY"] = new_key
    print("‚úÖ API –∫–ª—é—á –æ–±–Ω–æ–≤–ª–µ–Ω –≤ —Ç–µ–∫—É—â–µ–º –ø—Ä–æ—Ü–µ—Å—Å–µ")
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –∫–ª—é—á –≤ .env —Ñ–∞–π–ª–µ
    try:
        if not dotenv_file:
            # –ï—Å–ª–∏ .env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –µ–≥–æ
            with open(".env", "w") as f:
                f.write(f"ANTHROPIC_API_KEY={new_key}\n")
            print("‚úÖ –°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π .env —Ñ–∞–π–ª —Å API –∫–ª—é—á–æ–º")
        else:
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π .env —Ñ–∞–π–ª
            set_key(dotenv_file, "ANTHROPIC_API_KEY", new_key)
            print(f"‚úÖ API –∫–ª—é—á –æ–±–Ω–æ–≤–ª–µ–Ω –≤ —Ñ–∞–π–ª–µ {dotenv_file}")
        
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ .env —Ñ–∞–π–ª–∞: {e}")
        print("‚ö†Ô∏è API –∫–ª—é—á –æ–±–Ω–æ–≤–ª–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞")
        return False

if __name__ == "__main__":
    if update_api_key():
        print("\n‚úÖ API –∫–ª—é—á —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–≤–æ–≥–æ –∫–ª—é—á–∞
        if not is_railway():
            check_key = input("\n–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–æ–≤—ã–π –∫–ª—é—á —Å API Anthropic? (y/n): ").lower()
            if check_key == 'y':
                try:
                    import test_api_key
                    import asyncio
                    asyncio.run(test_api_key.test_api_key())
                except ImportError:
                    print("‚ùå –ú–æ–¥—É–ª—å test_api_key.py –Ω–µ –Ω–∞–π–¥–µ–Ω!")
                    print("üìù –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–µ—Å—Ç –æ—Ç–¥–µ–ª—å–Ω–æ –∫–æ–º–∞–Ω–¥–æ–π: python test_api_key.py")
    else:
        print("\n‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —Å –æ—à–∏–±–∫–∞–º–∏!") 